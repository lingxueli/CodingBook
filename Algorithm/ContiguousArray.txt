Contiguous Array

https://leetcode.com/problems/contiguous-array/

hashmap

[1,0,0,1,1,0] res = 4

i = 0:
	1: 1
	0: 0
i = 1:
	1: 1
	0: 0
	res = 2
i = 2:
	1: 1
	0 : 2
i = 3:
	1 : 2
	0 : 2
	res = 3
i = 4:
	candidate: array[i=0,i=current]
	1: 3
	0: 2

	another candidate: array[i=1,i=current]
	1 : 2
	0 : 2

1. brute force
	for i = 0 to last
		for j = i to j = last
			check array[i...j] if this subarray match

2. 
maintain variable "count"
it evaluates the "net gain": number of 1 - number of 0

if subarray[i...j] is the match (count == 0)
	subarray[0...i] vs subarray[0...j], count are the same

traverse the array from left to right
	hashmap: count -> first index

	the same hash value might be hit multiple times
	you want to keep the one appears the first, in order to get the maximum length of the subarray

