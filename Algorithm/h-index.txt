h-index

Array

https://leetcode.com/problems/h-index/

Example: [3,0,6,1,5]


Brute force
h = 1?
	citations >= 1: 3 papers
	other 2 papers citations <= 1

h = 2?
	citations >= 2: 3 papers 
	other 2 papers citations <= 2

h = 3?
	citations >= 3: 3 papers 
	other 2 papers citations <= 3

h = 4?
	citations >= 4: 2 papers (reach the upper bound)

Sorting the array makes brute force easier

[0,1,3,5,6]
[6,5,3,1,0]
	citations >= 1: 4 papers
	citations >= 2: 3 papers
	citations >= 3: 3 papers -> match
	citations >= 4: 2 papers
Traverse the 2nd array, from left to right
	citations >= 6: 1 paper
	citations >= 5: 2 paper
	citations >= 3: 3 paper -> match

	The macth is where A[i] = index + 1

	A[i] > index + 1 is when citations > number of papers
	means h-index < i
	do i++

	A[i] < index + 1 is when citations < number of papers
	means h-index > i
	do i--

What if you don't have the exact match A[i] != index + 1

[6,5,4,1,0]
	h-index = 4 no
	h-index = 1 possible
	h-index = 2 possible
	h-index = 3 yes

	Note: If there are several possible values for h, the maximum one is taken as the h-index.


	in this case, you find the h-index by 

	traversing from left to right
		iteration x: A[i] < index + 1 (you are at 1), this passes the h-index, roll back to previous iteration
		iteration x - 1: you are at 4, A[i] > index + 1, take "A[i] - 1" as h-index  (or take index + 1 as h-index?)

To verify this, take another example with non-consecutive arrays
[6,4,1,0]
	h-index = 4 no
	h-index = 1 possible

	h-index = 2 possible
	h-index = 3 no

	update:

		traversing from left to right
		iteration x: A[i] < index + 1 (you are at 1), this passes the h-index, roll back to previous iteration
		iteration x - 1: you are at 4, A[i] > index + 1, take "index + 1" as h-index 
